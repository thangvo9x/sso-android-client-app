// Generated by view binder compiler. Do not edit!
package com.wso2is.androidsample.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.widget.Button;
import android.widget.TextView;
import com.wso2is.androidsample.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bLogout;

  @NonNull
  public final TextView tvEmail;

  @NonNull
  public final TextView tvProfile;

  @NonNull
  public final TextView tvUsername;

  @NonNull
  public final TextView tvUsernameLabel;

  private ActivityUserBinding(@NonNull ConstraintLayout rootView, @NonNull Button bLogout,
      @NonNull TextView tvEmail, @NonNull TextView tvProfile, @NonNull TextView tvUsername,
      @NonNull TextView tvUsernameLabel) {
    this.rootView = rootView;
    this.bLogout = bLogout;
    this.tvEmail = tvEmail;
    this.tvProfile = tvProfile;
    this.tvUsername = tvUsername;
    this.tvUsernameLabel = tvUsernameLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bLogout;
      Button bLogout = rootView.findViewById(id);
      if (bLogout == null) {
        break missingId;
      }

      id = R.id.tvEmail;
      TextView tvEmail = rootView.findViewById(id);
      if (tvEmail == null) {
        break missingId;
      }

      id = R.id.tvProfile;
      TextView tvProfile = rootView.findViewById(id);
      if (tvProfile == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = rootView.findViewById(id);
      if (tvUsername == null) {
        break missingId;
      }

      id = R.id.tvUsernameLabel;
      TextView tvUsernameLabel = rootView.findViewById(id);
      if (tvUsernameLabel == null) {
        break missingId;
      }

      return new ActivityUserBinding((ConstraintLayout) rootView, bLogout, tvEmail, tvProfile,
          tvUsername, tvUsernameLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
